<?php

//ini_set('max_execution_time', 240);

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
set_time_limit(0);

include_once './api-data.php';
require __DIR__ . '/vendor/autoload.php';
use Automattic\WooCommerce\Client;

define('DO_NOT_UPDATE_PRICE', [
  3349668580798,
  3614272889590,
  8433982015106,
  88300107438,
  88300105519,
  8411061923245,
  8411061926093,
  8411061818961,
  8411061978832,
  8411061926918,
  8411061723760,
  8411061978733,
  8411061978900,
  3348901428545,
  3348901321129,
  3423473020233,
  3360375010972,
  3614272943148,
  3614271994806,
  3614272642225,
  3274872372153,
  3274872345676,
  3614229279276,
  3423470311365,
  8431754342016,
  3605532612836,
  3605532612768,
  3614271579492,
  3614272629387,
  3137370349426,
  3349668509669,
  3349668579839,
  3349668515660,
  3349668528677,
  3349668576111,
  3349668579839,
  3349668579822,
  3349668575657,
  22548024324,
  22548040126,
  3274872400733,
  3274872400726,
  3274872400719,
  3423478516854,
  3274872404182,
  3274870373268,
  3348900011687,
  3614271992932,
  8411061607152,
  8411061711767,
  8411061251607,
  3614272225718,
  3614272508323,
  3360375010972,
  3605522035300,
  3614271992901,
  3614272544444,
  3360372058878,
  3360375006432,
  3605521172525,
  3614272642225,
  3614271992932,
  3614270581670,
  3360374533205,
  3605521869746,
  3348901192231,
  3348901293846,
  3348900871991,
  3348900012219,
  3274878122561,
  3348901419369,
  3348901419147,
  3348901181839,
  3348901487528,
  3348901393119,
  3348901368247,
  3348901206174,
  3348901385725,
  3348900417878,
  3348900417885,
  3348901237116,
  3348901300049,
  3348901333054,
  3348901346115,
  3348901362832,
  763511009824,
  3274870162565,
  3274872334229,
  3274870012136,
  3274872313132,
  3274872384460,
  3274878212361,
  3274872400733,
  3274870002717,
  3274872372153,
  3274872347298,
  3274872365049,
  3274872389533,
  3274872311992,
  3274872384064,
  3274872341104,
  3352818518800,
  3274872323872,
  3614272629387,
  3147758034912,
  3147758155341,
  3605533315347,
  3614271579492,
  3605971670930,
  3360377022928,
  3360377032767,
  3605971670978,
  3605970794576,
  3605970859251,
  3605970416003,
  3605970416089,
  3605970859299,
  3605971945373,
  3605971325281,
  22548024324,
  22548040126,
  3614271716026,
  3614272050358,
  3365440037229,
  3365440787971,
  783320402555,
  783320404702,
  8411061865439,
  8411061607152,
  8411061923245,
  8411061865408,
  8411061865583,
  8411061853160,
  8411061818961,
  8411061865460,
  8411061934234,
  8411061665022,
  8411061777176,
  8411061081600,
  8411061907559,
  3145891071801,
  3145891054552,
  8435415017206,
  8435415017244,
  8435415012638,
  8435415022033,
  8435415017190,
  8435415011341,
  8435415012669,
  8435415000987,
  8435415032520,
  8435415006408,
  8435415011556,
  8435415000666,
  3274872328877,
  3137370349426,
  3137370321538,
  3137370332350,
  3349668545728,
  3349668573844,
  3349668021345,
  3349668515660,
  3349668545636,
  3349668562640,
  3349668571970,
  3349668573820,
  3349668535446,
  3349668555062,
  3349668577576,
  3349668579839,
  3349668577521,
  3349668528677,
  3349668543021,
  3349668580934,
  3348901333061,
  3349668566372,
  3274872353244,
  22548420140,
  3614272648425,
  3614272648418,
  8411061916933,
  3614272648401,
  3346470139466,
  3346470139459,
  3614272508323,
  3614272508224,
  3614272508217,
  8410190619319,
  8410190621220,
  8410190609129,
  8410190609105,
  8410190612464,
  8410190612778,
  8410190612525,
  8410190618671,
  8410190622531,
  8410190619302,
  8410190619333,
  8410190620414,
  8410190623934,
  8410190622104,
  8410190612655,
  8410190621138,
  8410190619272,
  8410190621114,
  8410190621237,
  8410225535751,
  8410225537922,
  8410225545293,
  8410225524588,
  8410225546498,
  8410225537519,
  8410225542988,
  8410225543770,
  8411061972045,
  8411061791691,
  8411061860564,
  8411061860441,
  8411061860410,
  8411061982044,
  8411061737835,
  8411061971918,
  8411061701041,
  8411061944653,
  8411061701034,
  8411061784280,
  8411061784273,
  8411061636268,
  8411061946671,
  8411061860502,
  8411061715482,
  8411061849330,
  8411061727935,
  8411061944684,
  8411061982020,
  8411061987292,
  8411061972076,
  8411061695951,
  8411061819623,
  8411061813973,
  8411061839669,
  8411061636275,
  8411061972069,
  8433982015106,
  8433982014581,
  8433982007415,
  8433982008214,
  8433982016820,
  8433982013171,
  8433982013621,
  8433982005367,
  8433982002274,
  8433982002267,
  8433982002243,
  8433982002236,
  8433982003837,
  8433982003844,
  8433982013164,
  8433982016462,
  8433982013232,
  8433982017100,
  8433982000577,
  8433982017124,
  8433982000546,
  8433982011276,
  8433982012303,
  8433982014635,
  8433982011481,
  8433982014567,
  8433982009174,
  8433982016578,
  8433982016493,
  8433982011245,
  8433982011474,
  8433982009235,
  8433982007590,
  8433982003158,
  8433982016776,
  8433982016011,
  8433982013041,
  8433982011443,
  8411061916964,
  8411061955574,
  8411061976036,
  8411061876039,
  8411061972106,
  8411061810606,
  8411061783375,
  8411061783368,
  8411061944189,
  8411061944202,
  8411061722176,
  8411061722169,
  8411061823026,
  8411061944172,
  8411061823033,
  8411061697290,
  3614228830393,
  3614228830515,
  3614229371628,
  3274870373268,
  3274872400719,
  8411061972168,
  8411061972175,
  8411061972151,
  3147758235524,
  3360377032750,
  8411061697283,
  3614272943216,
  3614272943186,
  3274872408166,
  3274872401594,
  3274872401600,
  8435415033589,
  8411061954065,
  8411061979051,
  8411061978986,
  8411061972656,
  8411061974759,
  3349668588718,
  3349668588688,
  3349668515660,
  3349668515653,
  3349668588749,
  3349668588732,
  8411061777176,
  3349668508488,
  3423473020233,
  8410190622944,
  8410190626362,
  8411061971857,
  8411061971925,
  8411061636268,
  8411061917510,
  8411061913024,
  8411061860410,
  8411061813973,
  8411061695951,
  8411061722756,
  8411061860502,
  8411061722169,
  8411061007815,
  8411061020685,
  8411061979723,
  8411061972656,
  8411061974759,
  3349668588718,
  3349668588688,
  3605972230324,
  3360372012825,
  3137370351061,
  3614272225701,
  3614272889583,
  3360372058861,
  3137370349433,
  3137370350446,
  3614272508217,
  8411061894026,
  3605972321879,
  8411061955819,
  3274872353220,
  3274872384453,
  8411061665039,
  8411061978825,
  783320461019,
  783320461002,
  783320502118,
  783320404672,
  3348900012189,
  8411061971741,
  8411061971772,
  8411061870518,
  8411061896259,
  3137370321545,
  8411061906651,
  8435415022026,
  8435415022040,
  8411061991909,
  8411061991886,
  8011003854318,
  3423473020516,
  8411061996973,
  8411061995754,
  3349668582297,
  3349668582365,
  8410190629525,
  3349668598120,
  3605972642561,
  3349668597963,
  3360372102359,
  3614273375870,
  3614273601993,
  3614273597319,
  3349668582365,
  8411061996973,
  8411061995754,
  3349668582297,
  8411061022177,
  8411061023235,
  8410190630666,
  3274872406216,
  32744872420359,
  22548420126,
  3348901471534,
  3414202011752,
  8433982018718,
  8433982018756,
  3274872385290,
  8431754006215,
  22548407912,
  8411061026601,
  841101026618,
  22548407912,
  3274872385290,
  8411061021682,
  8411061038048,
  3423222051785,
  3616302932283,
  3423222051754,
  7798336944138,
  8410225548980,
  8433982013010,
  3614272907690,
  8431754342016,
  3348901300049,
  3360372100522,
  3274872428058,
  3614222402077,
  8433982018701,
  3614228836043,
  3614273728270,
  3423222017866,
  3423473145752,
  8411061026618,
  3605972321794,
  3360372100522,
  3274872428058,
  3614222402077,
  8433982018701,
  3614228836043,
  3614273728270,
  3423222017866,
  3423473145752,
  3614271994844,
  7799075001533,
  7799075001861,
  7798095415511,
  8411061026601,
  8411061026618,
  8410190631601,
  8410190631618,
  8411061041673,
  8433982022425,
  3337875545891,
  7798095415122,
  8411061045190,
  8411061036471,
  8411061045251,
  8411061003589,
  8411061045336,
  8411061045213,
  3349668607969,
  8411061046258,
  3349668608560,
  3137370357339,
  8411061607169,
  8411061046241,
  8411061037997,
  8411061041673,
  8433982022425,
  8410190631618,
  8410225549451,
  8411061036501,
  8411061036945,
  7798336946927,
  8410225549475,
  3614222402077,
  8433982022432,
  8410190631281,
  7798014758699,
  3614227086227,
  3349668599417,
  8410225547877,
  8410225543794,
  779833694681,
  3600531622985,
  3349668594603,
  3349668594429,
  3349668594412,
  8410190632189,
  8410190632165,
  7798336946842,
  7798336946835,
  8410190630710,
  8410190627871,
  7798336944114,
  8057971183654,
  8057971183661,
  3423473101253,
  3423473049456,
  8411061058459,
  7798332020430,
  7798175718792,
  3360373063680,
  3274872441033,
  8411061045800,
  3614273476164,
  8411061057643,
  7798175718419,
  7798175718464,
  7798175718051,
  8011003839308,
  8411061999332,
  3423222090920,
  7798336946156,
  3423473042853,
  7798336947849,
  7798336947818,
  8411061034989,
  8411061034972,
  8411061000915,
  3349668614523,
  3605521816658,
  8411061994696,
  8411061777183,
  22548423950,
  7798336946149,
  7798336948570,
  3349668613861,
  3349668613861,
  8431754007939,
  3274872438835,
  8410225551836,
  7798336948495,
  7798336948457,
  7798336948488,
  8411061011195,
  7798014758996,
  7798014758989
]);

//try {
//php_sapi_name()!='cli'
 if(false){
    // not valid
    echo 'desde acá no pillín';
  } else {

    // Conexión WooCommerce API destino
    // ================================
   
    $woocommerce = new Client(
        url_API_woo,
        ck_API_woo,
        cs_API_woo,
        
        [
         //'wp_api' => true,
          'version' => 'wc/v3',
          //'oauth_only' => true,
          'query_string_auth' => true,
          'verify_ssl' => false,
          'timeout' => 400]
    );

    $productos = [];
    $page_full = 100;
    $page_x = 1;
    while ($page_full==100 /*&& $page_x <3*/){
      $parameters = ['per_page' => 100,
                    'page' => $page_x,
                     'order_by' =>'id'
                    //'include'=> [8556]
                  ];
      sleep(3);
      $productos_in_page_x = $woocommerce->get('products',$parameters);
      $productos = array_merge($productos_in_page_x,$productos);
      $page_full = count($productos_in_page_x);
      //var_dump($page_x);
      $page_x++;
    }

    $array_of_skus = []; // to update
    $map_sku_id = [];
    $map_id_stock = [];
    foreach ($productos as $p){
      if ($p->sku!=''){
        $array_of_skus[] = $p->sku ;
        $map_sku_id[$p->sku] = $p->id;
        $map_id_stock[$p->id] = $p->manage_stock;
      }
    }
    //var_dump($array_of_skus);
    // la pagina tenía elementos
    if (count($array_of_skus)>0){
      $curl = curl_init();

      //$params = json_encode(['username' => $farma_user,'password' => $farma_pass,'codigo' => '7793640000747']);
      //$params = json_encode(['username' => $farma_user,'password' => $farma_pass,'codigos' => ['7793640000747','7794640172601']]);
      $params = json_encode(['username' => farma_user,'password' => farma_pass,'codigos' => $array_of_skus]);

      curl_setopt_array($curl, array(
        CURLOPT_URL => "https://www.drogueriasur.com.ar/dsapi/articulos/search.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 0,
        CURLOPT_CONNECTTIMEOUT => 0,
        CURLOPT_FOLLOWLOCATION => false,
        CURLOPT_SSL_VERIFYHOST => false,
        CURLOPT_SSL_VERIFYPEER => false,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "POST",
        CURLOPT_POSTFIELDS =>$params,
        CURLOPT_HTTPHEADER => array(
          "Content-Type: application/json"
        ),
      ));

      //var_dump($params);
      $productos_drogueria = json_decode(curl_exec($curl),true);
      //var_dump($productos_drogueria);
      //var_dump(curl_getinfo($curl));

      curl_close($curl);

      $items_data = [];

      $param_sku ='';
      foreach ($productos_drogueria as $producto){
        foreach ($producto as $p){

        	$id = get_id($p,$map_sku_id);
        	$item_data = ['id' => $id];
          if (update_price($p)) {
             $item_data['regular_price'] = $p['iva']==1?floatval($p['precio_farmacia'])*1.7:floatval($p['precio_farmacia'])*1.4;
          }
          if ($map_id_stock[$id]!=1) {
            $item_data['stock_status'] = map_stock($p['stock']);
          }
          $items_data[] = $item_data;

        }
      }

      $items_data_chunks = array_chunk($items_data,50);
      $i = 1;
      foreach($items_data_chunks as $item_data)
      {
          $data = [
            'update' => $item_data,
          ];
          //var_dump($data);
          sleep(3);
          //set_time_limit(3);
          $result = $woocommerce->post('products/batch', $data);
          echo '<br>';
          if (! $result) {
            print("❗Error al actualizar productos ".$i."\n");
            write_log("❗Error al actualizar productos ".$i."\n");
            //mail('jsepulveda@xulum.com', 'NUAGES - api update failed', 'sep palmó otra vez, sonamos :( - error al escribir el archivo u alguna otra cosa');
            //mail('inux2012@gmail.com', 'NUAGES - api update failed', 'sep palmó otra vez, sonamos :( - error al escribir el archivo u alguna otra cosa');
          } else {
            write_log("✔ Productos actualizados correctamente ".$i."\n");
            print("✔ Productos actualizados correctamente ".$i."\n");
          }
          $i++;
      }
    }
  } // fin else

/*} catch (Exception $e) {
   // mail('jsepulveda@xulum.com', 'NUAGES - api update failed error', 'sep palmó otra vez, sonamos :( '.$e);
    //mail('inux2012@gmail.com', 'NUAGES - api update failed error', 'sep palmó otra vez, sonamos :( '.$e);
}*/

function map_stock($stock_string) {
  $stock_status = 'outofstock';
  switch ($stock_string) {
    case 'S': $stock_status = 'instock';      //stock habitual
              break;
    case 'B': $stock_status = 'outofstock';   //stock bajo, confirme con su operadora
              break;
    case 'F': $stock_status = 'outofstock';   //producto en falta
              break;
    case 'D': $stock_status = 'outofstock';   //producto descontinuado -- por ahí se puede quitar
              break;
    case 'R': $stock_status = 'outofstock';   //producto sujeto a stock
              break;
  }
  return $stock_status;

}

//como devuelve el valor en cualquier de cualquier código de barras, tengo que chequear por cada uno, se asume que son exlcusivos y no se pisan con ningún producto

function get_id($p,$map_sku_id){
  $id = '';
  //var_dump($p);
  if (isset($map_sku_id[floatval($p['codigo_barras'])])){
    // si está el primero asumo que es ese y a la bosta
    $id = $map_sku_id[floatval($p['codigo_barras'])];
  } else { //chequeo el siguiente código
    if ($p['codigo_barras2']!=''){ //chequeo si hay código
      if (isset($map_sku_id[floatval($p['codigo_barras2'])])){
        $id = $map_sku_id[floatval($p['codigo_barras2'])];
      }
    } else {
      if (isset($map_sku_id[floatval($p['codigo_barras3'])])){
        $id = $map_sku_id[floatval($p['codigo_barras3'])];
      }
    }
  } // en teoría no llegamos con id vacío aca

  return $id;

}

function write_log($text){

  $mes = date('Y-m');
  $dia_hora = date('d H:i');
  $logfile = fopen("logs/".$mes."-cron.log", "a") or die("Unable to open file!");
  fwrite($logfile, $dia_hora.' - '.$text);
  fclose($logfile);


}

//otra chanchada por los distintos códigos de barras
function update_price($p){
  $result = true;
  if (in_array(floatval($p['codigo_barras']), DO_NOT_UPDATE_PRICE)){
    $result = false;
  } else { //chequeo el siguiente código
    if ($p['codigo_barras2']!=''){ //chequeo si hay código
      if (in_array(floatval($p['codigo_barras2']), DO_NOT_UPDATE_PRICE)){
        $result = false;
      } else {
        if ($p['codigo_barras3']!=''){
          if (in_array(floatval($p['codigo_barras3']), DO_NOT_UPDATE_PRICE)){
            $result = false;
          }
        }
      }
    } else {
      if ($p['codigo_barras3']!=''){
        if (in_array(floatval($p['codigo_barras3']), DO_NOT_UPDATE_PRICE)){
            $result = false;
        }
      }
    }
  }
  return $result;
}
